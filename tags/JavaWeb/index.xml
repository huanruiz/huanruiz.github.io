<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaWeb on PunchCode</title>
    <link>https://huanruiz.github.io/tags/JavaWeb/</link>
    <description>Recent content in JavaWeb on PunchCode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 31 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://huanruiz.github.io/tags/JavaWeb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaWeb-MVC/过滤器/监听器</title>
      <link>https://huanruiz.github.io/post/notes/30_JavaWeb-MVC-%E8%BF%87%E6%BB%A4%E5%99%A8-%E7%9B%91%E5%90%AC%E5%99%A8/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huanruiz.github.io/post/notes/30_JavaWeb-MVC-%E8%BF%87%E6%BB%A4%E5%99%A8-%E7%9B%91%E5%90%AC%E5%99%A8/</guid>
      <description>MVC三层架构 MVC: Controller专注于业务处理, 它的处理结果就是Model. Model可以是一个JavaBean(pojo), 也可以是一个包含多个对象的Map, Controller只负责把Model传递给View, View只负责把Model给渲染出来开发Controller时</description>
    </item>
    
    <item>
      <title>JavaWeb-Cookie/Session</title>
      <link>https://huanruiz.github.io/post/notes/29_JavaWeb-Cookie_Session/</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huanruiz.github.io/post/notes/29_JavaWeb-Cookie_Session/</guid>
      <description>cookie: 客户端技术(响应/请求), session: 服务器技术, 把信息或数据放在session中. 都是保存会话的技术. 现实中的例子就是已经登陆的网站, 下次可以直接登陆. Cookie 先测试cookie, 打印上次登录的时间. 要注意cookie是有大小和数量限制的. public class CookieDemo01 extends HttpServlet { @Override protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException { req.setCharacterEncoding(&amp;quot;utf-8&amp;quot;); resp.setCharacterEncoding(&amp;quot;utf-8&amp;quot;); PrintWriter out = resp.getWriter(); //服</description>
    </item>
    
    <item>
      <title>JavaWeb-Servlet</title>
      <link>https://huanruiz.github.io/post/notes/28_JavaWeb-Servlet/</link>
      <pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huanruiz.github.io/post/notes/28_JavaWeb-Servlet/</guid>
      <description>原理 其中首次访问指创建war包的过程, service方法定义在Servlet接口中. 实验 在MVN repository中找Java Servlet API/jsp api, 导入maven. 除了通过maven导入, 也可以在Project Structure-Module导入. 删掉src, 在父项目下创建一个webapp类型</description>
    </item>
    
    <item>
      <title>JavaWeb-Tomcat/Maven及其配置</title>
      <link>https://huanruiz.github.io/post/notes/27_JavaWeb-TomcatMaven%E5%8F%8A%E5%85%B6%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 10 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huanruiz.github.io/post/notes/27_JavaWeb-TomcatMaven%E5%8F%8A%E5%85%B6%E9%85%8D%E7%BD%AE/</guid>
      <description>Web服务器 静态web的客户端直接从服务器下文件, 像我的这个博客一样, 没法动态更新. 而动态web中, 服务器可以提供动态的资源, 可以连接数据库. JSP/Servlet B/S: 浏览器和服务器, C/S: 客户端和服务器. 而JSP(html嵌入Java)是sun主推的B/S架构, 基于java. 解决PHP无法承载高访问量的</description>
    </item>
    
  </channel>
</rss>
